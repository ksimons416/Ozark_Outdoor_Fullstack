{"version":3,"sources":["./src/app/service/auth.service.ts","./src/environments/environment.ts","./src/app/service/user-service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/model/http-options.ts","./src/app/components/homepage/homepage.component.ts","./src/app/components/homepage/homepage.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { User } from '../model/User';\nimport { catchError, map, tap} from 'rxjs/operators';\nimport { HttpOptions } from '../model/http-options'; \nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/retry';\nimport { ServiceResponse } from '../model/service-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService{\n\n  endpoint = '/user';\n  user: User;\n  statusCode: string;\n  httpOptions = HttpOptions\n  error: HttpErrorResponse;\n  serviceResponse: ServiceResponse<HttpErrorResponse>;\n\n\n  constructor(private http: HttpClient) {\n\n  }\n  authenticate(username: string, password: string) :Observable<any> {\n    return this.http.get<any>(this.endpoint+'/authenticate/'+username+'/'+password, this.httpOptions).catch((err: HttpErrorResponse) =>{\n          this.error = err;\n          console.log(\"an error occured: \"+this.error.status+\" \"+this.error.statusText);\n          this.serviceResponse.responseCode = this.error.status;\n          return Observable.empty();\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiUrl : 'http://localhost:8080',\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {User} from 'src/app/model/User';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class UserService{\r\n\r\n    endpoint = '/user';\r\n\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\ngetAll(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.endpoint+'/findAllUsers');\r\n}\r\n//\r\nngOnInit(): void {\r\n    \r\n}\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ozark-frontend';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/model/User';\nimport { UserService } from 'src/app/service/user-service';\nimport {FormsModule } from '@angular/forms'\nimport { AuthService } from 'src/app/service/auth.service';\nimport { first } from 'rxjs/operators';\nimport {ServiceResponse} from \"../../model/service-response\";\nimport { Router } from '@angular/router';\nimport {HttpOptions} from '../../model/http-options'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  users: User[];\n  username: string;\n  password: string;\n  user: User;\n  serviceResponse: string;\n  httpOptions = HttpOptions;\n  errorType: string;\n\n\n  constructor(private userService: UserService, private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.userService.getAll().subscribe(users =>{\n      this.users = users;\n    })\n  }\n  loginSubmit() {\n    this.authService.authenticate(this.username, this.password).subscribe(\n      data => {\n        this.serviceResponse = data;\n        if(Object.values(this.serviceResponse)[0] == \"User is authenticated\"){\n          this.router.navigate([\"/homepage\"]);\n          console.log(Object.values(this.serviceResponse));\n          console.log(data);\n        }\n      },\n        error => {\n          error = this.authService.error\n          if(error[\"status\"] == 404){\n              this.errorType = \"Not Found\"\n          }else if(error[\"status\"] == 401){\n            this.errorType = \"Unauthorized\"\n          }\n          console.error(\"invalid login \"+JSON.stringify(error));\n      });\n      }\n\n}","<p>login works!</p>\n<ul>\n    <li *ngFor=\"let user of users\">{{user.firstName}} {{user.lastName}}</li>\n</ul>\n\n<form #loginForm = \"ngForm\" (ngSubmit)=\"loginSubmit()\">\n\n    <div class=\"field-wrap\">\n      <label>\n        Email Address<span class=\"req\">*</span>\n      </label>\n      <input type=\"email\"\n             required=\"required\"\n             name = \"username\"\n             [(ngModel)] = \"username\" >\n    </div>\n\n    <div class=\"field-wrap\">\n      <label>\n        Password<span class=\"req\">*</span>\n      </label>\n      <input type=\"password\"\n             name=\"password\"\n             id=\"password\"\n             name = \"ngModel\"\n             required\n             [(ngModel)] = \"password\">\n    </div>\n    <!--<button class=\"button button-block\" routerLink=\"/userradio\">Log In</button>-->\n    <button class = \"button button-block\" type=\"submit\" [disabled]=\"!loginForm.valid\">Login</button>\n    <p *ngIf = \"errorType == 'Not Found'\">\n        You don't have an account registered with this email\n    </p>\n    <p *ngIf = \"errorType == 'Unauthorized'\">\n        Your password is incorrect\n    </p>\n  </form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from 'src/app/components/login/login.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule } from '@angular/forms';\nimport { HomepageComponent } from './components/homepage/homepage.component'\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/operator/retry'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomepageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {HttpHeaders} from '@angular/common/http';\r\n\r\nexport const HttpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'responseType': 'text',\r\n        'observe': 'response'\r\n    })\r\n};","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>homepage works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'homepage',\n    component: HomepageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}